// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayPointAPi.DataAccess.Data;

#nullable disable

namespace PayPointAPi.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250905055354_AddedEmplyees")]
    partial class AddedEmplyees
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PayPointAPI.Models.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Snacks"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Household"
                        });
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EmployeePhone")
                        .HasColumnType("float");

                    b.Property<double>("EmployeeStore")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeEmail = "ali@example.com",
                            EmployeeName = "Ali Khan",
                            EmployeePhone = 3001234567.0,
                            EmployeeStore = 0.0,
                            StoreId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeEmail = "sara@example.com",
                            EmployeeName = "Sara Ahmed",
                            EmployeePhone = 3129876543.0,
                            EmployeeStore = 0.0,
                            StoreId = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeEmail = "bilal@example.com",
                            EmployeeName = "Bilal Sheikh",
                            EmployeePhone = 3331234567.0,
                            EmployeeStore = 0.0,
                            StoreId = 3
                        });
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ExpiryDate = new DateOnly(2025, 12, 31),
                            Price = 250,
                            ProductDescription = "Freshly squeezed orange juice.",
                            ProductName = "Orange Juice",
                            StockQuantity = 100,
                            StoreId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ExpiryDate = new DateOnly(2025, 10, 15),
                            Price = 100,
                            ProductDescription = "Crispy salted potato chips.",
                            ProductName = "Potato Chips",
                            StockQuantity = 200,
                            StoreId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            ExpiryDate = new DateOnly(2027, 1, 1),
                            Price = 300,
                            ProductDescription = "Lemon-scented dishwashing liquid.",
                            ProductName = "Dishwashing Liquid",
                            StockQuantity = 80,
                            StoreId = 3
                        });
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Location = "Main Street, Karachi",
                            StoreName = "Main Street Supermart"
                        },
                        new
                        {
                            StoreId = 2,
                            Location = "Sector G-11, Islamabad",
                            StoreName = "Green Valley Market"
                        },
                        new
                        {
                            StoreId = 3,
                            Location = "Gulberg III, Lahore",
                            StoreName = "Daily Essentials"
                        });
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Employee", b =>
                {
                    b.HasOne("PayPointAPI.Models.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Product", b =>
                {
                    b.HasOne("PayPointAPI.Models.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayPointAPI.Models.Models.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PayPointAPI.Models.Models.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
